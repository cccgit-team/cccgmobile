"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WatchHtmlService = void 0;
var utils_service_1 = require("./utils.service");
var siteCache = new Map();
var WatchHtmlService = /** @class */ (function () {
    function WatchHtmlService(httpClient) {
        this.httpClient = httpClient;
    }
    WatchHtmlService.prototype.getWatchHTMLPage = function (id, options, httpClient) {
        return __awaiter(this, void 0, void 0, function () {
            var utilsService, watchHtmlService, body, info, args;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        utilsService = new utils_service_1.UtilsService();
                        watchHtmlService = new WatchHtmlService(httpClient);
                        return [4 /*yield*/, watchHtmlService.getHTMLWatchPageBody(id, options, utilsService, httpClient)];
                    case 1:
                        body = _a.sent();
                        info = { page: 'watch' };
                        try {
                            // @ts-ignore
                            info.player_response = watchHtmlService.findJSON('watch.html', 'player_response', body, /\bytInitialPlayerResponse\s*=\s*\{/i, '\n', '{', utilsService);
                        }
                        catch (err) {
                            args = watchHtmlService.findJSON('watch.html', 'player_response', body, /\bytplayer\.config\s*=\s*{/, '</script>', '{', utilsService);
                            // @ts-ignore
                            info.player_response = utilsService.findPlayerResponse('watch.html', args);
                        }
                        // @ts-ignore
                        info.response = watchHtmlService.findJSON('watch.html', 'response', body, /\bytInitialData("\])?\s*=\s*\{/i, '\n', '{', utilsService);
                        // @ts-ignore
                        info.html5player = utilsService.getHTML5player(body);
                        return [2 /*return*/, info];
                }
            });
        });
    };
    WatchHtmlService.prototype.findJSON = function (source, varName, body, left, right, prependJSON, utilsService) {
        if (prependJSON === void 0) { prependJSON = ''; }
        var jsonStr = utilsService.between(body, left, right);
        if (!jsonStr) {
            throw Error("Could not find " + varName + " in " + source);
        }
        return utilsService.parseJSON(source, varName, utilsService.cutAfterJSON("" + prependJSON + jsonStr));
    };
    WatchHtmlService.prototype.getHTMLWatchPageBody = function (id, options, utilsService, httpClient) {
        return __awaiter(this, void 0, void 0, function () {
            var url, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!siteCache.get(id)) return [3 /*break*/, 1];
                        return [2 /*return*/, siteCache.get(id)];
                    case 1:
                        url = utilsService.getHTMLWatchURL(id);
                        return [4 /*yield*/, httpClient.get(url, {}, {})];
                    case 2:
                        response = _a.sent();
                        siteCache.set(id, response.data);
                        return [2 /*return*/, response.data];
                }
            });
        });
    };
    return WatchHtmlService;
}());
exports.WatchHtmlService = WatchHtmlService;
