"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.searchVideo = void 0;
var urllib = __importStar(require("url"));
var basic_info_service_1 = require("./basic-info.service");
var cip_service_1 = require("./cip.service");
var ngx_1 = require("@ionic-native/http/ngx");
var utils_service_1 = require("./functions/utils.service");
var watch_html_service_1 = require("./functions/watch-html.service");
var format_utils_service_1 = require("./format-utils.service");
function searchVideo(youtubeId, sortType) {
    return __awaiter(this, void 0, void 0, function () {
        var httpClient, options, basicInfoService, info, funcs, utilsService, watchHtmlService, _a, _b, _c, _d, html5player, ciphService, _e, _f, formatUtils, results;
        return __generator(this, function (_g) {
            switch (_g.label) {
                case 0:
                    httpClient = new ngx_1.HTTP();
                    options = {};
                    basicInfoService = new basic_info_service_1.BasicInfoService(httpClient);
                    return [4 /*yield*/, basicInfoService.getBasicInfo(youtubeId, {})];
                case 1:
                    info = _g.sent();
                    funcs = [];
                    if (!info.formats.length) return [3 /*break*/, 5];
                    utilsService = new utils_service_1.UtilsService();
                    watchHtmlService = new watch_html_service_1.WatchHtmlService(httpClient);
                    _a = info;
                    _b = info.html5player;
                    if (_b) return [3 /*break*/, 3];
                    _d = (_c = utilsService).getHTML5player;
                    return [4 /*yield*/, watchHtmlService.getHTMLWatchPageBody(youtubeId, options, utilsService, httpClient)];
                case 2:
                    _b = _d.apply(_c, [_g.sent()]);
                    _g.label = 3;
                case 3:
                    _a.html5player = _b;
                    if (!info.html5player) {
                        throw Error('Unable to find html5player file');
                    }
                    html5player = urllib.resolve(utilsService.VIDEO_URL, info.html5player);
                    ciphService = new cip_service_1.CiphService(httpClient);
                    _f = (_e = funcs).push;
                    return [4 /*yield*/, ciphService.decipherFormats(info.formats, html5player, options)];
                case 4:
                    _f.apply(_e, [_g.sent()]);
                    _g.label = 5;
                case 5:
                    formatUtils = new format_utils_service_1.FormatUtilsService();
                    return [4 /*yield*/, Promise.all(funcs)];
                case 6:
                    results = _g.sent();
                    info.formats = Object.values(Object.assign.apply(Object, __spreadArray([{}], results)));
                    info.formats = info.formats.map(formatUtils.addFormatMeta);
                    if (sortType === 'video') {
                        try {
                            info.formats.sort(formatUtils.sortFormatsByVideo);
                        }
                        catch (e) {
                            // tslint:disable-next-line:no-console
                            console.log(e);
                        }
                    }
                    else {
                        try {
                            info.formats.sort(formatUtils.sortFormatsByAudio);
                        }
                        catch (e) {
                            // tslint:disable-next-line:no-console
                            console.log(e);
                        }
                    }
                    info.full = true;
                    return [2 /*return*/, info];
            }
        });
    });
}
exports.searchVideo = searchVideo;
